// <auto-generated />
using System;
using Journeys.API.Models.Entities.Waypoints;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NavigationModule.Journeys.Brokers.Storages;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NavigationModule.Journeys.Migrations
{
    [DbContext(typeof(StorageBroker))]
    partial class StorageBrokerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NavigationModule.Journeys.Models.Entities.Achievements.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("DailyDistance")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsRewarded")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("NavigationModule.Journeys.Models.Entities.Journeys.Journey", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ArrivalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<ArrivalPoint>("ArrivalPoint")
                        .HasColumnType("jsonb");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("StartingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<StartingPoint>("StartingPoint")
                        .HasColumnType("jsonb");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalDate");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Journeys");
                });
#pragma warning restore 612, 618
        }
    }
}
